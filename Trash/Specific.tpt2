:name Ir.Trash.Specific

; index, [10]t
:local int i

; Only modify this macro!
; By changing the number, you control how many tiers to trash
; Do Not Remove any pair, instead just set the number to 0
; Default configuration as in the Simple version
;   it ignores 130 items, leaving you with in worst case
;   2 slots if you have bonus 24 factory inventory
#data "\
5 block.dense \
5 plate.dense \
9 screw \
0 plate.rubber \
9 plate.circuit \
9 ring \
9 pipe \
9 wire \
9 circuit \
2 hammer \
5 motor \
0 chip \
5 cable.insulated \
5 block \
5 pump \
5 plate.stack \
0 lump \
3 producer.town \
3 producer.mine \
3 producer.powerplant \
3 producer.factory \
3 producer.workshop \
3 producer.constructionFirm \
3 producer.headquarters \
3 producer.laboratory \
3 producer.tradingpost \
3 producer.arcade \
3 producer.museum \
3 producer.shipyard \
3 producer.statueofcubos \
0 producer.gems \
0 producer.exoticgems \
9 machine.oven \
9 machine.presser \
9 machine.transportbelt \
9 machine.crusher \
9 machine.mixer \
9 machine.refinery \
9 machine.assembler \
9 machine.shaper \
9 machine.cutter \
9 machine.boiler \
0 sapling.rubber \
0 rubber \
0 ore \
0 dust \
0 ingot \
9 rod \
9 plate \
9 cable\
"
#t (i % 10) + 1
#index (i / 10)
#tier index("012345678910", sub({data}, {index}, 1), 0)
#indexSpace(start) index({data}, " ", {start})
#indexItemStart ({indexSpace({index})} + 1)
#indexItemEnd if({indexSpace({indexItemStart})} == -1, len({data}), {indexSpace({indexItemStart})})
#item sub({data}, {indexItemStart}, {indexItemEnd} - {indexItemStart}), {t}

; Impulses
key.t()

; Conditions
isopen("factory")

; Actions
executesync("turbo start")
goto(check)

trash:
trash({item}, count({item}))

inc:
i = if({t} < {tier} - 1, i + 1, ({indexItemEnd} + 1) * 10)

check:
gotoif(if({tier} < 1, inc, trash), {index} < len({data}))

executesync("turbo stop")
wait(0.)
